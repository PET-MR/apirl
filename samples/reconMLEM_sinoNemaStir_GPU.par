MLEM Parameters :=
; Ejemplo de archivo de configuración de reconstrucción MLEM.
input type := Sinogram3D
input file := I:\Sinogramas\SinogramasAATN\sinoNemaStir.s
; if the next parameter is disabled, 
; the sensitivity will be computed
;sensitivity filename := MLEM_stirNEMA_128__sensitivity.h33
initial estimate := constantImage_128_128_47.h33
; enable this when you read an initial estimate with negative data
enforce initial positivity condition :=0
output filename prefix := cuMLEM_stirNEMA_128
number of iterations := 1
save estimates at iteration intervals := 1


END :=

; PARAMETROS QUE USA EL STIR Y QUE POR AHORA NO SE USAN EN APIRL:
; specify additive projection data to handle randoms or so
; see User's Guide for more info
;additive sinogram := 0

;objective function type:= PoissonLogLikelihoodWithLinearModelForMeanAndProjData
;PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=


; Sinograma de Entrada.
; if disabled, defaults to maximum segment number in the file
;maximum absolute segment number to process := 4
; see User's Guide to see when you need this
;zero end planes of segment 0:= 1





; here comes the prior stuff

;prior type := quadratic
;  Quadratic Prior Parameters:=
;  penalisation factor := 1
;  ; next defaults to 0, set to 1 for 2D inverse Euclidean weights, 0 for 3D 
;  only 2D:= 0
;  ; next can be used to set weights explicitly. Needs to be a 3D array (of floats).
;  ' value of only_2D is ignored
;  ; following example uses 2D 'nearest neighbour' penalty
;  ; weights:={{{0,1,0},{1,0,1},{0,1,0}}}
;  ; use next parameter to specify an image with penalisation factors (a la Fessler)
;  ; see class documentation for more info
;  ; kappa filename:=
;  ; use next parameter to get gradient images at every subiteration
;  ; see class documentation
;  gradient filename prefix:= 
;  END Quadratic Prior Parameters:=

;end PoissonLogLikelihoodWithLinearModelForMeanAndProjData Parameters:=





; enable this for multiplicative form of OSMAPOSL (see User's Guide)
;MAP model := multiplicative
